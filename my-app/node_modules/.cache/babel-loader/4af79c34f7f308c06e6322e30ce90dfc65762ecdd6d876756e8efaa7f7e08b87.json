{"ast":null,"code":"import { create } from \"zustand\";\nimport axios from \"axios\";\nconst notesStore = create(set => ({\n  notes: [],\n  createForm: {\n    title: \"\",\n    body: \"\"\n  },\n  updateForm: {\n    _id: null,\n    title: \"\",\n    body: \"\"\n  },\n  fetchNotes: async () => {\n    //Fetch the notes\n    const res = await axios.get(\"/notes\");\n    //Set the state\n    set({\n      notes: res.data.note\n    });\n  },\n  updateCreateFormField: e => {\n    const {\n      name,\n      value\n    } = e.target;\n    set(state => {\n      return {\n        createForm: {\n          ...state.createForm,\n          [name]: value\n        }\n      };\n    });\n  },\n  createNote: async e => {\n    e.preventDefault();\n    const {\n      createForm,\n      notes\n    } = notesStore.getState();\n    //Create the note\n    const res = await axios.post(\"/notes\", createForm);\n\n    //Update state\n    set({\n      notes: [...notes, res.data.notes],\n      createForm: {\n        title: \"\",\n        body: \"\"\n      }\n    });\n  },\n  deleteNote: async _id => {\n    //Delete the note\n    await axios.delete(`/notes/${_id}`);\n    const {\n      notes\n    } = notesStore.getState();\n    //Update State\n    const newNotes = notes.filter(note => {\n      return note._id !== _id;\n    });\n    set({\n      notes: newNotes\n    });\n  },\n  handleUpdateFieldChange: e => {\n    const {\n      value,\n      name\n    } = e.target;\n    set(state => {\n      return {\n        updateForm: {\n          ...state.updateForm,\n          [name]: value\n        }\n      };\n    });\n  },\n  toggleUpdate: ({\n    _id,\n    title,\n    body\n  }) => {\n    //Set state on update form\n    set({\n      updateForm: {\n        title,\n        body,\n        _id\n      }\n    });\n  },\n  updateNote: async () => {\n    const {\n      updateForm: {\n        title,\n        body,\n        _id\n      },\n      notes\n    } = notesStore.getState();\n    //Send the update request\n    try {\n      const res = await axios.put(`/notes/${_id}`, {\n        title,\n        body\n      });\n      //Update state\n      const newNotes = [...notes];\n      const noteIndex = notes.findIndex(note => {\n        return note._id === _id;\n      });\n      newNotes[noteIndex] = res.data.note;\n      set({\n        notes: newNotes,\n        updateForm: {\n          _id: null,\n          title: \"\",\n          body: \"\"\n        }\n      });\n    } catch (error) {\n      console.error('Error updating note: ', error);\n    }\n  }\n}));\nexport default notesStore;","map":{"version":3,"names":["create","axios","notesStore","set","notes","createForm","title","body","updateForm","_id","fetchNotes","res","get","data","note","updateCreateFormField","e","name","value","target","state","createNote","preventDefault","getState","post","deleteNote","delete","newNotes","filter","handleUpdateFieldChange","toggleUpdate","updateNote","put","noteIndex","findIndex","error","console"],"sources":["D:/login-frontend/my-app/src/stores/notesStore.js"],"sourcesContent":["import { create } from \"zustand\";\r\nimport axios from \"axios\";\r\n\r\nconst notesStore = create((set) => ({\r\n  notes: [],\r\n  createForm: {\r\n    title: \"\",\r\n    body: \"\",\r\n  },\r\n  updateForm: {\r\n    _id: null,\r\n    title: \"\",\r\n    body: \"\",\r\n  },\r\n  fetchNotes: async () => {\r\n    //Fetch the notes\r\n    const res = await axios.get(\"/notes\");\r\n    //Set the state\r\n    set({ notes: res.data.note });\r\n  },\r\n  updateCreateFormField: (e) => {\r\n    const { name, value } = e.target;\r\n    set((state) => {\r\n      return {\r\n        createForm: {\r\n          ...state.createForm,\r\n          [name]: value,\r\n        },\r\n      };\r\n    });\r\n  },\r\n\r\n  createNote: async (e) => {\r\n    e.preventDefault();\r\n    const { createForm, notes } = notesStore.getState();\r\n    //Create the note\r\n    const res = await axios.post(\"/notes\", createForm);\r\n\r\n    //Update state\r\n    set({\r\n      notes: [...notes, res.data.notes],\r\n      createForm: {\r\n        title: \"\",\r\n        body: \"\",\r\n      },\r\n    });\r\n  },\r\n\r\n  deleteNote: async (_id) => {\r\n    //Delete the note\r\n    await axios.delete(`/notes/${_id}`);\r\n    const { notes } = notesStore.getState();\r\n    //Update State\r\n    const newNotes = notes.filter((note) => {\r\n      return note._id !== _id;\r\n    });\r\n    set({ notes: newNotes });\r\n  },\r\n\r\n  handleUpdateFieldChange: (e) => {\r\n    const { value, name } = e.target;\r\n\r\n    set((state) => {\r\n      return {\r\n        updateForm: {\r\n          ...state.updateForm,\r\n          [name]: value,\r\n        },\r\n      };\r\n    });\r\n  },\r\n  toggleUpdate: ({ _id, title, body }) => {\r\n    //Set state on update form\r\n    set({\r\n      updateForm: {\r\n        title,\r\n        body,\r\n        _id,\r\n      },\r\n    });\r\n  },\r\n  updateNote: async () => {\r\n\r\n    const {\r\n      updateForm: { title, body, _id },\r\n      notes,\r\n    } = notesStore.getState();\r\n    //Send the update request\r\n    try {\r\n        const res = await axios.put(`/notes/${_id}`, {\r\n            title,\r\n            body,\r\n          });\r\n          //Update state\r\n          const newNotes = [...notes];\r\n          const noteIndex = notes.findIndex((note) => {\r\n            return note._id === _id;\r\n          });\r\n          newNotes[noteIndex] = res.data.note;\r\n          set({\r\n            notes: newNotes,\r\n            updateForm: {\r\n              _id: null,\r\n              title: \"\",\r\n              body: \"\",\r\n            },\r\n          });\r\n    } catch (error) {\r\n        console.error('Error updating note: ',error)\r\n        \r\n    }\r\n    \r\n  },\r\n}));\r\n\r\nexport default notesStore;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}